import java.util.*;
class thread implements Runnable{
    public void run(){
        try{
            Thread.sleep(2000);
        }
        catch(InterruptedException e){
            e.printStackTrace();
        }
        System.out.print("The state of thread1 when thread2 on join : "+Main.thread1.getState()+"\n");
        for(int i=0;i<5;i++){
            System.out.print(i+"\n");
            try{
                Thread.sleep(100);
            }
            catch(InterruptedException e){}
        }
    } 
}
class Main implements Runnable{
    public static Main obj;
    public static Thread thread1;
    public static void main(String args[]){
        obj=new Main();
        thread1=new Thread(obj);
        System.out.print("The state of thread1 after creating it : "+thread1.getState()+"\n");
        thread1.start();
    }
    public void run(){
        System.out.print("The state of thread1 after calling start : "+thread1.getState()+"\n");
        thread n=new thread();
        Thread thread2=new Thread(n);
        System.out.print("The state of thread2 after creating it : "+thread2.getState()+"\n");
        thread2.start();
        System.out.print("The state of thread2 calling start : "+thread2.getState()+"\n");
        try{
            thread2.join();
        }
        catch(InterruptedException e){
            e.printStackTrace();
        }
        System.out.print("The state of thread2 after ending it : "+thread2.getState()+"\n");
        for(char a='a';a<='e';a++){
            System.out.print(a+"\n");
            try{
                Thread.sleep(200);
            }
            catch(InterruptedException e){}
        }
    }
    
}